name: Build GNSSPeriph

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-20.04
    container: ardupilot/ardupilot-dev-chibios:latest
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails

    steps:
    # install github cli
    - name: Install github cli
      run: |
        sudo apt update
        type -p curl >/dev/null || sudo apt install curl -y
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh jq -y
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Download CubeID firmware from latest release
      run: |
            export ASSET_ID=$(gh api \
            -H "Accept: application/vnd.github.v3.raw" \
            -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
            "repos/cubepilot/cubeid/releases/latest" | jq -r '.assets[] | select(.name | contains("fw_update.bin")) | .id')
            echo "ASSET_ID=$ASSET_ID"
            gh api \
            -H "Accept: application/octet-stream" \
            -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
            "repos/cubepilot/cubeid/releases/assets/$ASSET_ID" > fw_update.bin
            ls -al fw_update.bin
            mkdir -p build/ROMFS_custom/
            mv fw_update.bin build/ROMFS_custom/CubeID_fw.bin
      env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    - name: configure
      run: ./waf configure --board Here3+
    - name: build
      run: ./waf AP_Periph
    - name: configure bootloader
      run: ./waf configure --bootloader
    - name: build
      run: ./waf bootloader
      continue-on-error: true
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        # Artifact name
        name: GNSSPeriph
        # A file, directory or wildcard pattern that describes what to upload
        path: build/*/bin
